{"version":3,"sources":["components/Footer.js","components/Error.js","components/Loading.js","services/api.js","store/MovieConstants.js","store/MovieActions.js","pages/MovieDetails.js","store/SearchQueryConstants.js","components/SearchInput.js","store/SearchQueryActions.js","components/Header.js","hooks/useInfiniteScroll.js","pages/MovieItem.js","pages/MovieList.js","pages/MoviePopularPage.js","pages/MovieSearchPage.js","pages/Dashboard.js","App.js","store/MovieReducers.js","store/SearchQueryReducer.js","store/debounceMiddleware.js","store/index.js","index.js"],"names":["Footer","className","href","rel","Error","error","userMessage","Loading","api","axios","create","baseURL","process","defaults","headers","common","MOVIE_POPULAR_REQUEST","MOVIE_POPULAR_SUCCESS","MOVIE_POPULAR_FAIL","MOVIE_SEARCH_REQUEST","MOVIE_SEARCH_SUCCESS","MOVIE_SEARCH_FAIL","MOVIE_DETAILS_REQUEST","MOVIE_DETAILS_SUCCESS","MOVIE_DETAILS_FAIL","fetchMovieSearch","page","keyword","language","dispatch","a","type","get","data","payload","results","total_pages","MovieDetails","history","useHistory","movieId","useParams","id","useSelector","state","movieDetails","loading","cachedDetails","useDispatch","useEffect","getState","title","tagline","originalLanguage","original_language","originalTitle","original_title","overview","popularity","backdropPath","backdrop_path","posterPath","poster_path","releaseDate","release_date","genres","voteAverage","vote_average","fetchMovieDetails","onClick","goBack","style","backgroundSize","backgroundPosition","backgroundImage","src","alt","split","map","i","name","SEARCH_QUERY_SUCCESS","SEARCH_QUERY_RESET","SearchInput","useState","query","setQuery","searchQuery","push","value","placeholder","onChange","e","preventDefault","target","meta","debounce","searchQueryDebounced","Header","useInfiniteScroll","hasMorePages","nextPageNumber","setNextPageNumber","observer","useRef","useCallback","elementNode","current","disconnect","IntersectionObserver","entries","isIntersecting","prevState","observe","MovieItem","itemFwRef","ref","to","forwardRef","MovieList","listFwRef","movies","movie","index","length","React","MoviePopularPage","moviePopular","loadElementRef","fetchMoviePopular","MovieSearchPage","movieSearch","movieSearchKeyword","prevSearchKeyword","Dashboard","App","path","exact","component","moviePopularInitialState","movieSearchInitialState","movieDetailsInitialState","ErrorImprovedMessage","errorPayload","errors","response","statusCode","status_code","devMessage","statusMessage","status_message","searchInitialState","timeout","rootReducer","combineReducers","action","uniqBy","totalPages","totalResults","total_results","middleware","thunk","next","clearTimeout","setTimeout","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74d96a3e.chunk.js","sourcesContent":["const Footer = () => {\n  return (\n    <div className='footer'>\n      <nav className='footer__nav'>\n        <a\n          className='footer__item'\n          href='https://github.com/fpontef'\n          rel='noopener noreferrer'\n        >\n          Github @ fpontef\n        </a>\n        <p className='footer__item'>Coded by NandoTech</p>\n      </nav>\n    </div>\n  );\n};\n\nexport default Footer;\n","const Error = ({ error }) => {\n  return (\n    <div className='error'>\n      <p className='error__text-warning'>\n        Ops, ocorreu um erro: {error.userMessage}\n      </p>\n    </div>\n  );\n};\n\nexport default Error;\n","const Loading = () => {\n  return <div className='loading'>Carregando...</div>;\n};\n\nexport default Loading;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\n// Global Config\napi.defaults.headers.common[\n  'Authorization'\n] = `Bearer ${process.env.REACT_APP_API_TOKEN}`;\n\napi.defaults.headers.common['Content-Type'] = 'application/json';\n\nexport default api;\n","export const MOVIE_POPULAR_REQUEST = 'MOVIE_POPULAR_REQUEST';\nexport const MOVIE_POPULAR_SUCCESS = 'MOVIE_POPULAR_SUCCESS';\nexport const MOVIE_POPULAR_FAIL = 'MOVIE_POPULAR_FAIL';\n\nexport const MOVIE_SEARCH_REQUEST = 'MOVIE_SEARCH_REQUEST';\nexport const MOVIE_SEARCH_SUCCESS = 'MOVIE_SEARCH_SUCCESS';\nexport const MOVIE_SEARCH_FAIL = 'MOVIE_SEARCH_FAIL';\n\nexport const MOVIE_DETAILS_REQUEST = 'MOVIE_DETAILS_REQUEST';\nexport const MOVIE_DETAILS_SUCCESS = 'MOVIE_DETAILS_SUCCESS';\nexport const MOVIE_DETAILS_FAIL = 'MOVIE_DETAILS_FAIL';\n","import api from '../services/api';\nimport {\n  MOVIE_DETAILS_FAIL,\n  MOVIE_DETAILS_REQUEST,\n  MOVIE_DETAILS_SUCCESS,\n  MOVIE_POPULAR_REQUEST,\n  MOVIE_POPULAR_SUCCESS,\n  MOVIE_POPULAR_FAIL,\n  MOVIE_SEARCH_FAIL,\n  MOVIE_SEARCH_REQUEST,\n  MOVIE_SEARCH_SUCCESS,\n} from './MovieConstants';\n\nexport const fetchMoviePopular = ({ page = 1, language = 'pt-BR' }) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: MOVIE_POPULAR_REQUEST });\n\n      const { data } = await api.get(\n        `/movie/popular?page=${page}&language=${language}`\n      );\n\n      dispatch({\n        type: MOVIE_POPULAR_SUCCESS,\n        payload: {\n          page: data.page,\n          results: data.results,\n          total_pages: data.total_pages,\n        },\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_POPULAR_FAIL,\n        payload: err,\n      });\n    }\n  };\n};\n\nexport const fetchMovieSearch = ({\n  page = 1,\n  keyword = '',\n  language = 'pt-BR',\n}) => {\n  return async (dispatch) => {\n    try {\n      dispatch({ type: MOVIE_SEARCH_REQUEST });\n\n      const { data } = await api.get(\n        `/search/movie?query=${keyword}&page=${page}&language=${language}`\n      );\n\n      dispatch({\n        type: MOVIE_SEARCH_SUCCESS,\n        payload: {\n          keyword: keyword,\n          page: data.page,\n          results: data.results,\n          total_pages: data.total_pages,\n        },\n      });\n    } catch (err) {\n      dispatch({\n        type: MOVIE_SEARCH_FAIL,\n        payload: err,\n      });\n    }\n  };\n};\n\nexport const fetchMovieDetails = ({ movieId, language = 'pt-BR' }) => {\n  return async (dispatch, getState) => {\n    // Check data already exists\n    // visto aqui: https://redux.js.org/usage/reducing-boilerplate\n    const {\n      movieDetails: { cachedDetails },\n    } = getState();\n\n    if (!cachedDetails[movieId])\n      // this checks if has already a state.movieDetails[movieId]\n      // if is cached data, return (doing nothing)\n      try {\n        dispatch({ type: MOVIE_DETAILS_REQUEST });\n\n        const { data } = await api.get(\n          `/movie/${movieId}?language=${language}`\n        );\n\n        // dispatch({ type: MOVIE_DETAILS_SUCCESS, payload: data });\n        dispatch({\n          type: MOVIE_DETAILS_SUCCESS,\n          payload: {\n            id: data.id,\n            title: data.title,\n            tagline: data.tagline,\n            originalLanguage: data.original_language,\n            originalTitle: data.original_title,\n            overview: data.overview,\n            popularity: data.popularity,\n            backdropPath: data.backdrop_path,\n            posterPath: data.poster_path,\n            releaseDate: data.release_date,\n            genres: data.genres,\n            voteAverage: data.vote_average,\n          },\n        });\n      } catch (err) {\n        dispatch({ type: MOVIE_DETAILS_FAIL, payload: err });\n      }\n  };\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Error from '../components/Error';\nimport Loading from '../components/Loading';\nimport { fetchMovieDetails } from '../store/MovieActions';\n\nconst MovieDetails = () => {\n  const history = useHistory();\n  const { id: movieId } = useParams();\n\n  const { loading, error, cachedDetails } = useSelector(\n    (state) => state.movieDetails\n  );\n\n  const movieDetails = cachedDetails[movieId];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchMovieDetails({ movieId }));\n  }, [dispatch, movieId]);\n\n  return (\n    <>\n      <button type='button' onClick={() => history.goBack()}>\n        {'<< '} Voltar...\n      </button>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Error error={error} />\n      ) : (\n        movieDetails && (\n          <div\n            className='moviedetails'\n            style={{\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              backgroundImage: `url(https://image.tmdb.org/t/p/original/${movieDetails.backdropPath}) `,\n            }}\n          >\n            <div className='moviedetails__cover'>\n              <div className='moviedetails__header'>\n                {movieDetails.posterPath !== null ? (\n                  <img\n                    className='moviedetails__img'\n                    src={`https://image.tmdb.org/t/p/w300/${movieDetails.posterPath}`}\n                    alt={`Poster do Filme ${movieDetails.title}`}\n                  />\n                ) : (\n                  <div\n                    className='moviedetails__img img-placeholder '\n                    alt={movieDetails.title}\n                  >\n                    {movieDetails.title}\n                  </div>\n                )}\n                <div className='moviedetails__items'>\n                  <h1 className='moviedetails__title'>{movieDetails.title}</h1>\n                  <h4 className='moviedetails__text'>\n                    {movieDetails.releaseDate.split('-')[0]}\n                  </h4>\n                  {movieDetails.tagline && (\n                    <h4 className='moviedetails__tagline'>\n                      {movieDetails.tagline}\n                    </h4>\n                  )}\n                  <div className='moviedetails__genre'>\n                    {movieDetails.genres.map((i) => (\n                      <span key={i.id}>{i.name}</span>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <p className='moviedetails__text'>{movieDetails.overview}</p>\n            </div>\n          </div>\n        )\n      )}\n    </>\n  );\n};\n\n// `title`, `description`, `rating`, `etc`.\nexport default MovieDetails;\n","export const SEARCH_QUERY_SUCCESS = 'SEARCH_QUERY_SUCCESS';\nexport const SEARCH_QUERY_RESET = 'SEARCH_QUERY_RESET';\n","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchQueryDebounced } from '../store/SearchQueryActions';\n\nconst SearchInput = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [query, setQuery] = useState('');\n\n  const { keyword } = useSelector((state) => state.searchQuery);\n\n  useEffect(() => {\n    // Trick to allow search from every screen (including movideDetails)\n    if (keyword) {\n      // history.push('/');\n      // fix to work with GHPages:\n      history.push(`${process.env.PUBLIC_URL}/`);\n    }\n  }, [history, keyword]);\n\n  return (\n    <input\n      className='search__input'\n      type='search'\n      name='search'\n      value={query}\n      placeholder='Digite sua busca'\n      onChange={(e) => {\n        e.preventDefault();\n        const value = e.target.value;\n        setQuery(value);\n        dispatch(searchQueryDebounced(value));\n      }}\n    />\n  );\n};\n\nexport default SearchInput;\n","import { SEARCH_QUERY_SUCCESS } from './SearchQueryConstants';\n\nexport const searchQueryDebounced = (keyword) => ({\n  type: SEARCH_QUERY_SUCCESS,\n  payload: keyword,\n  meta: {\n    debounce: 500,\n  },\n});\n","import SearchInput from '../components/SearchInput';\n\nconst Header = () => {\n  return (\n    <div className='header'>\n      <div className='header__nav'>\n        <h1 className='header__title'>Explore o Mundo do Cinema!</h1>\n        <div className='header__text'>\n          <p>Powered by</p>\n          <img\n            className='header__logo'\n            src='https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg'\n            alt='The Movie Data Base Logo'\n          />\n        </div>\n      </div>\n      <div className='search'>\n        <SearchInput />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import { useState, useCallback, useRef } from 'react';\n\nconst useInfiniteScroll = ({ loading, page = 1, hasMorePages }) => {\n  const [nextPageNumber, setNextPageNumber] = useState(page);\n\n  const observer = useRef(null);\n\n  // loadElementRef must be a ref from a DOM obj. Example: <li>\n  // If have child or something, follow the fowardRef from react docs:\n  // https://reactjs.org/docs/forwarding-refs.html#forwarding-refs-to-dom-components\n  const loadElementRef = useCallback(\n    (elementNode) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        // check if list of entries[0] - we just have one entry is intersecting\n        // isIntersecting = is on the page somewhere.\n        if (entries[0].isIntersecting) {\n          hasMorePages && setNextPageNumber((prevState) => prevState + 1);\n          // hasMorePages && setNextPageNumber(page + 1);\n        }\n      });\n\n      if (elementNode) observer.current.observe(elementNode);\n    },\n    [hasMorePages, loading]\n  );\n\n  return [loadElementRef, nextPageNumber];\n};\n\nexport default useInfiniteScroll;\n","import { forwardRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst MovieItem = ({ poster_path, title, id }, itemFwRef) => {\n  return (\n    <div className='movielist__item' ref={itemFwRef}>\n      {/* <Link to={`/detail/${id}`}> */}\n      <Link to={`${process.env.PUBLIC_URL}/detail/${id}`}>\n        {poster_path !== null ? (\n          <img\n            className='movielist__poster'\n            src={`https://image.tmdb.org/t/p/w220_and_h330_face/${poster_path}`}\n            alt={title}\n          />\n        ) : (\n          <div className='img-placeholder movielist__poster' alt={title}>\n            {title}\n          </div>\n        )}\n      </Link>\n    </div>\n  );\n};\n\nexport default forwardRef(MovieItem);\n","import React from 'react';\nimport MovieItem from './MovieItem';\n\nconst MovieList = ({ movies }, listFwRef) => {\n  return (\n    <div className='movielist'>\n      {movies.map((movie, index) => {\n        if (movies.length === index + 3)\n          return (\n            <MovieItem\n              key={movie.id}\n              ref={listFwRef}\n              poster_path={movie.poster_path}\n              title={movie.title}\n              id={movie.id}\n            />\n          );\n        return (\n          <MovieItem\n            key={movie.id}\n            poster_path={movie.poster_path}\n            title={movie.title}\n            id={movie.id}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default React.forwardRef(MovieList);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMoviePopular } from '../store/MovieActions';\nimport Error from '../components/Error';\nimport Loading from '../components/Loading';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport MovieList from './MovieList';\n\nconst MoviePopularPage = () => {\n  const dispatch = useDispatch();\n\n  const { loading, error, movies, page, hasMorePages } = useSelector(\n    (state) => state.moviePopular\n  );\n\n  const [loadElementRef, nextPageNumber] = useInfiniteScroll({\n    loading,\n    page,\n    hasMorePages,\n  });\n\n  useEffect(() => {\n    dispatch(fetchMoviePopular({ page: nextPageNumber }));\n  }, [dispatch, nextPageNumber]);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {error ? (\n        <Error error={error} />\n      ) : movies.length ? (\n        <MovieList movies={movies} ref={loadElementRef} />\n      ) : (\n        <div className='error__text'>Ops, não tem nada aqui.</div>\n      )}\n    </>\n  );\n};\n\nexport default MoviePopularPage;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchMovieSearch } from '../store/MovieActions';\nimport Error from '../components/Error';\nimport Loading from '../components/Loading';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport MovieList from './MovieList';\n\nconst MovieSearchPage = ({ keyword }) => {\n  const dispatch = useDispatch();\n\n  const {\n    loading,\n    error,\n    movies = [],\n    page,\n    keyword: movieSearchKeyword,\n    hasMorePages,\n  } = useSelector((state) => state.movieSearch);\n\n  const [loadElementRef, nextPageNumber] = useInfiniteScroll({\n    loading,\n    page,\n    hasMorePages,\n  });\n\n  const prevSearchKeyword = movieSearchKeyword;\n\n  useEffect(() => {\n    if (prevSearchKeyword === keyword) {\n      dispatch(fetchMovieSearch({ page: nextPageNumber, keyword: keyword }));\n    } else {\n      dispatch(fetchMovieSearch({ page: 1, keyword: keyword }));\n    }\n    // Disabled because prevSearchKeyword should will trigger an update.\n    // may need change aproach to useRef: https://reactjs.org/docs/hooks-faq.html#what-can-i-do-if-my-effect-dependencies-change-too-often\n    // eslint-disable-next-line\n  }, [dispatch, nextPageNumber, keyword]);\n\n  return (\n    <>\n      {loading && <Loading />}\n      {error ? (\n        <Error error={error} />\n      ) : movies.length ? (\n        <MovieList movies={movies} ref={loadElementRef} />\n      ) : (\n        <div className='error__text'>Ops, não tem nada aqui.</div>\n      )}\n    </>\n  );\n};\n\nexport default MovieSearchPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport MoviePopularPage from './MoviePopularPage';\nimport MovieSearchPage from './MovieSearchPage';\n\nconst Dashboard = () => {\n  const { keyword } = useSelector((state) => state.searchQuery);\n\n  if (keyword) {\n    return <MovieSearchPage keyword={keyword} />;\n  } else {\n    return <MoviePopularPage />;\n  }\n};\n\nexport default Dashboard;\n","import { BrowserRouter as Router } from 'react-router-dom';\nimport Footer from './components/Footer';\nimport { Switch, Route } from 'react-router-dom';\nimport MovieDetails from './pages/MovieDetails';\nimport Header from './components/Header';\nimport Dashboard from './pages/Dashboard';\n\n// Possible better fix for GHPages and keep BrowserRouter instead of HashRouter:\n// <Router basename={process.env.PUBLIC_URL}>\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route\n          path={`${process.env.PUBLIC_URL}/`}\n          exact\n          component={Dashboard}\n        />\n        <Route\n          path={`${process.env.PUBLIC_URL}/detail/:id`}\n          component={MovieDetails}\n        />\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import uniqBy from 'lodash.uniqby';\nimport {\n  MOVIE_POPULAR_REQUEST,\n  MOVIE_POPULAR_SUCCESS,\n  MOVIE_POPULAR_FAIL,\n  MOVIE_SEARCH_REQUEST,\n  MOVIE_SEARCH_SUCCESS,\n  MOVIE_SEARCH_FAIL,\n  MOVIE_DETAILS_REQUEST,\n  MOVIE_DETAILS_SUCCESS,\n  MOVIE_DETAILS_FAIL,\n} from './MovieConstants';\n\n/*\n * Movie Popular (Initial List)\n */\nconst moviePopularInitialState = {\n  loading: false,\n  error: null,\n  movies: [],\n};\n\nexport const moviePopularReducer = (\n  state = moviePopularInitialState,\n  action\n) => {\n  const { type, payload } = action;\n  switch (type) {\n    case MOVIE_POPULAR_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case MOVIE_POPULAR_SUCCESS:\n      return {\n        ...state,\n        error: null,\n        loading: false,\n        movies: uniqBy([...state.movies, ...payload.results], 'id'),\n        page: payload.page,\n        totalPages: payload.total_pages,\n        totalResults: payload.total_results,\n        hasMorePages: payload.page < payload.total_pages,\n      };\n\n    case MOVIE_POPULAR_FAIL:\n      return {\n        loading: false,\n        error: ErrorImprovedMessage(payload),\n      };\n    default:\n      return state;\n  }\n};\n\n/*\n * Movie Search List\n */\nconst movieSearchInitialState = {\n  loading: false,\n  error: null,\n  movies: [],\n};\n\nexport const movieSearchReducer = (state = movieSearchInitialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case MOVIE_SEARCH_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case MOVIE_SEARCH_SUCCESS:\n      if (payload.keyword === state.keyword)\n        return {\n          error: null,\n          loading: false,\n          keyword: payload.keyword,\n          movies: uniqBy([...state.movies, ...payload.results], 'id'),\n          page: payload.page,\n          totalPages: payload.total_pages,\n          totalResults: payload.total_results,\n          hasMorePages: payload.page < payload.total_pages,\n        };\n      return {\n        error: null,\n        loading: false,\n        keyword: payload.keyword,\n        movies: payload.results,\n        page: 1,\n        totalPages: payload.total_pages,\n        totalResults: payload.total_results,\n        hasMorePages: payload.page < payload.total_pages,\n      };\n\n    case MOVIE_SEARCH_FAIL:\n      return {\n        loading: false,\n        error: ErrorImprovedMessage(payload),\n      };\n    default:\n      return state;\n  }\n};\n\n/*\n * Movie Details\n */\nconst movieDetailsInitialState = {\n  loading: false,\n  error: null,\n  cachedDetails: {},\n};\n\nexport const movieDetailsReducer = (\n  state = movieDetailsInitialState,\n  action\n) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case MOVIE_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case MOVIE_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        cachedDetails: {\n          ...state.cachedDetails,\n          [payload.id]: {\n            id: payload.id,\n            title: payload.title,\n            tagline: payload.tagline,\n            originalLanguage: payload.originalLanguage,\n            originalTitle: payload.originalTitle,\n            overview: payload.overview,\n            popularity: payload.popularity,\n            backdropPath: payload.backdropPath,\n            posterPath: payload.posterPath,\n            releaseDate: payload.releaseDate,\n            genres: payload.genres,\n            voteAverage: payload.voteAverage,\n          },\n        },\n      };\n\n    case MOVIE_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: ErrorImprovedMessage(payload),\n      };\n    default:\n      return state;\n  }\n};\n\nconst ErrorImprovedMessage = (errorPayload) => {\n  const errors = [errorPayload?.response?.data?.errors];\n  const statusCode = errorPayload?.response?.data?.status_code;\n  const statusMessage = errorPayload?.response?.data?.status_message;\n\n  /*\n   * TMDB have 3 error messages, one of them is just an \"errors\" array.\n   * other two comes with status code.\n   */\n  const statusCodeMessage = {\n    7: 'Chave de API inválida.',\n    34: 'O recurso solicitado não pôde ser encontrado.',\n  };\n  return {\n    devMessage: {\n      errors,\n      statusCode,\n      statusMessage,\n    },\n    userMessage: errors\n      ? 'Código: 422 - A consulta deve ser fornecida ou não é válida.'\n      : `Código: ${statusCode} - ${statusCodeMessage[statusCode]}`,\n  };\n};\n","import {\n  SEARCH_QUERY_RESET,\n  SEARCH_QUERY_SUCCESS,\n} from './SearchQueryConstants';\n\nconst searchInitialState = {\n  keyword: '',\n};\n\nexport const searchQueryReducer = (state = searchInitialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SEARCH_QUERY_SUCCESS:\n      return {\n        keyword: payload,\n      };\n    case SEARCH_QUERY_RESET:\n      return {\n        keyword: '',\n      };\n    default:\n      return state;\n  }\n};\n","/*\n * Original author @sanathsharma, while asking for a { meta } key inside\n * the new redux-toolkit:\n * link: https://github.com/reduxjs/redux-toolkit/issues/750\n */\n\n// stores a reference for clearTimeout\nconst timeout = {};\n\n// ({ dispatch }) =>\n\nexport const debounceMiddleware = () => (next) => (action) => {\n  // extract the debounce duration(delay)\n  const debounce = action.meta?.debounce;\n\n  // if debounce flag not enabled, forward the action to next middleware\n  // zero is falsy\n  if (!debounce) return next(action);\n\n  // clear timeout for the action\n  clearTimeout(timeout[action.type]);\n\n  // set(first time)/reset timeout for the action\n  timeout[action.type] = setTimeout(() => {\n    // delete the debounce key, if action gets dispatched again in the upcomming middlewares\n    delete action.meta?.debounce;\n\n    // delete the timeout in the timeout object (optional)\n    delete timeout[action.type];\n\n    // forward to next middleware\n    next(action);\n  }, debounce);\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport {\n  moviePopularReducer,\n  movieSearchReducer,\n  movieDetailsReducer,\n} from './MovieReducers';\nimport { searchQueryReducer } from './SearchQueryReducer';\nimport { debounceMiddleware } from './debounceMiddleware';\n\nconst rootReducer = combineReducers({\n  searchQuery: searchQueryReducer,\n  moviePopular: moviePopularReducer,\n  movieSearch: movieSearchReducer,\n  movieDetails: movieDetailsReducer,\n});\n\n// const bookmarkFromStorage = localStorage.getItem('bookmarks')\n//   ? JSON.parse(localStorage.getItem('bookmarks'))\n//   : null;\n\n// const initialState = {\n//   bookmark: { bookmark: bookmarkFromStorage },\n// };\nconst initialState = {};\n\nconst middleware = [thunk, debounceMiddleware];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}